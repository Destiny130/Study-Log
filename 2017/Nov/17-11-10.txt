About closure in JavaScript:

Those articles are brilliant:
  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures
  https://www.cnblogs.com/Alex--Yang/p/3505285.html
  
  search 'javascript module pattern' in browser




<script>
    /*function f1() {
        var n = 999;
        nAdd = function () { n += 1 }
        function f2() {
            alert(n);
        }
        return f2;
    }
    var result = f1();
    result(); // 999
    nAdd();
    result(); // 1000

    var name = "The Window";
    var object = {
        name: "My Object",
        getNameFunc: function a() {
            console.log(this);     //this = My Object
            return function b() {
                console.log(this);  //this = Window
                return this.name;
            };
        }
    };
    alert(object.getNameFunc()());*/

    /*var name = "The Window";
    var object = {
        name: "My Object",
        getNameFunc: function c() {
            console.log(object);  //object = My Object
            console.log(this);  //this = My Object
            var that = this;
            console.log(that);  //that = My Object
            return function d() {
                console.log(this);  //this = Window
                console.log(that);  //that = My Object
                //return that.name;
                return function e(z) {
                    var i = {
                        name: "other",
                        other: function f() {
                            console.log(i);  //i = other
                            console.log(this);  //this = other
                            return this.name;
                        }
                    };
                    console.log(this);  //this = Window
                    console.log(that);  //that = My Object
                    return (z + "+" + i.other());//that.name;
                }
            };
        }
    };
    alert(object.getNameFunc()()('012'));
    console.log("-------------------------------------This block ends-------------------------------------");*/

    //function makeFunc() {
    //    var name = 'Mozilla';
    //    function displayName() {
    //        alert(name);
    //    }
    //    return displayName;
    //}

    //var myFunc = makeFunc();
    //myFunc();

    /*function makeAdder(x) {
        return function (y) {
            console.log("x:" + x);
            console.log("y:" + y);
            return x + y;
        };
    }

    var add5 = makeAdder(5);
    var add10 = makeAdder(10);

    console.log(add5(2));  // 7
    console.log(add10(2));  // 12
    console.log("-------------------------------------This block ends-------------------------------------");

    function makeAdder2(x) {
        console.log(x + this);
        return function (y) {
            console.log(y + this);
            return function (z) {
                console.log(z + this);
                console.log("x:" + x);
                console.log("y:" + y);
                console.log("z:" + z);
                return x + y + z;
            }
        };
    }

    var add5 = makeAdder2(5);
    var add10 = makeAdder2(10);
    console.log("add function ends.");

    console.log(add5(2)(3));   // 10
    console.log(add10(2)(3));  // 15      //add5 and add10 are both closures.

    console.log(makeAdder2(1)(2)(3));  // 6*/
</script>

<div>
    <p>Some paragraph text</p>
    <h1>some heading 1 text</h1>
    <h2>some heading 2 text</h2>

    <a href="#" id="size-12">12</a>
    <a href="#" id="size-14">14</a>
    <a href="#" id="size-16">16</a>

    <style>
        body {
            font-family: Helvetica, Arial, sans-serif;
            font-size: 12px;
        }

        h1 {
            font-size: 1.5em;
        }


        h2 {
            font-size: 1.2em;
        }
    </style>
    <script>
        function makeSizer(size) {
            return function () {
                document.body.style.fontSize = size + 'px';
            };
        }

        var size12 = makeSizer(12);
        var size14 = makeSizer(14);
        var size16 = makeSizer(16);

        document.getElementById('size-12').onclick = size12;
        document.getElementById('size-14').onclick = size14;
        document.getElementById('size-16').onclick = size16;


        var counter = (function m() {
            var privateCounter = 0;
            console.log(this);  //this = Window
            function changeBy(val) {
                privateCounter += val;
            }
            return {
                increment: function () {
                    console.log("increment: ",this);
                    changeBy(1);
                },
                decrement: function (x) {
                    console.log("decrement: ",this);
                    changeBy(-x);
                    console.log("decrement: ",this);
                },
                value: function () {
                    return privateCounter;
                }
            };
        }());   //or --})();--        //Why it has a '()' in the end.

        console.log("counter: ",counter);
        console.log(counter.value()); // logs 0
        counter.increment();
        counter.increment();
        console.log(counter.value()); // logs 2
        counter.decrement(3);
        console.log(counter.value()); // logs 1
        console.log("-------------------------------------This block ends-------------------------------------");

        var makeCounter = function () {
            var privateCounter = 0;
            function changeBy(val) {
                privateCounter += val;
            }
            return {
                increment: function () {
                    changeBy(1);
                },
                decrement: function () {
                    changeBy(-1);
                },
                value: function () {
                    return privateCounter;
                }
            }
        };

        var counter1 = makeCounter();
        var counter2 = makeCounter();
        console.log("counter1 initial: ",counter1.value());  // 0
        counter1.increment();
        counter1.increment();
        console.log("counter1 add twice: ",counter1.value());  // 2
        counter1.decrement();
        console.log("counter1 sub once: ",counter1.value());  // 1
        console.log("counter2 initial: ",counter2.value());  // 0
    </script>
</div>

<div>
    <p id="help">Helpful notes will appear here</p>
    <p>E-mail: <input type="text" id="email" name="email"></p>
    <p>Name: <input type="text" id="name" name="name"></p>
    <p>Age: <input type="text" id="age" name="age"></p>
    <script>
        /*function showHelp(help) {
            document.getElementById('help').innerHTML = help;
        }

        function setupHelp() {
            var helpText = [
                { 'id': 'email', 'help': 'Your e-mail address' },
                { 'id': 'name', 'help': 'Your full name' },
                { 'id': 'age', 'help': 'Your age (you must be over 16)' }
            ];

            for (var i = 0; i < helpText.length; i++) {
                var item = helpText[i];
                document.getElementById(item.id).onfocus = function () {
                    showHelp(item.help);
                }
            }
        }

        setupHelp();*/

        function showHelp(help) {
            document.getElementById('help').innerHTML = help;
        }

        function makeHelpCallback(help) {
            return function () {
                showHelp(help);
            };
        }

        function setupHelp() {
            var helpText = [
                { 'id': 'email', 'help': 'Your e-mail address' },
                { 'id': 'name', 'help': 'Your full name' },
                { 'id': 'age', 'help': 'Your age (you must be over 16)' }
            ];

            for (var i = 0; i < helpText.length; i++) {
                var item = helpText[i];
                document.getElementById(item.id).onfocus = makeHelpCallback(item.help);
            }
        }

        setupHelp();
    </script>
</div>
