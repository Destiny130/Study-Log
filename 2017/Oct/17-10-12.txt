New knowledge:
   1. If I use a 'click' and a 'blur' in jquery, 'blur' will happen before 'click',to solve this,
      we can use the following two method:
         a. Replace 'click' with 'mousedown'.
          b. Use 'delay' in 'blur', put '$("#test").delay(100).hide(100);' in 'blur' function.
          
   2. I writen a auto complete by myself.
          In controller:  List<string> strList = new List<string>() { "123", "234", "489", "asd", "asdf", "asfg"};
                          ViewBag.strlist = strList;
          In View:  
             <div style="display:inline;position:relative;">
                <input id="autocomplete" name="autocomplete" value="" style="width:150px;position:relative" />
                <ul id="candlist" style="display:none;list-style:none;position:absolute;background-color:white;
                    border:1px solid grey;left:0;padding:4px;"></ul>
             </div>
             <script>
                 var ac = $("#autocomplete");
                 var candlist = $("#candlist");
                 var listsou = @Html.Raw(Json.Encode(@ViewBag.strlist));  //Get the source list.
                 ac.keyup(function () {     //Every key up in the input, this function will search match element.
                    var typein = ac.val();  //Get input value.
                    var innerhtml = "";     //Initialize the innerHTML of the candadite list.
                    if(typein != null && typein != ""){
                       $.each(listsou,function(i,item){  //Ergodic source list and find matching item.
                          if (item.indexOf(typein) > -1){
                              innerhtml += '<li id="'+item + '" style="width:140px;">' + item +'</li>';
                          }
                       });
                       if(innerhtml != ""){
                          candlist.html(innerhtml);
                          candlist.show();
                       }
                       else{ candlist.hide(); }
                    }
                    else { candlist.hide(); }
                 });
                 candlist.on("mousedown","li",function(){ ac.val(this.innerHTML); });  //Use choosen value fills in the input.
                 ac.blur(function(){ candlist.hide(); });
              </script>
              <style> li:hover{ background-color:rgba(215, 215, 215, 0.4); } </style>
   
   3. Learend ajax this afternoon,simple useage is unexpected simple.
      a. Without arguments:
         In Controller:   public ActionResult GetSomeData(){
                              string testval = "You can choose SONY";
                              return Content(testval);     }
         In View:  <div>
                       <select id="selectlist">
                           <option value="1">SONY</option>
                           <option value="2">KDDI</option>
                           <option value="3">Apple</option>
                           <option value="4">Sum</option>
                       </select><br />
                       <div id="result">~</div>
                   </div>
                   <script>
                       $(document).ready(function () {
                           $("#selectlist").change(function () {
                               $.ajax({
                                   type: "Post",
                                   url: "/controllername/actionname",
                                   data: "",
                                   success: function (sesponseTest) {
                                       $("#result").html(sesponseTest);
                                   }
                               });
                           });
                       });
                   </script>
      b. With arguments:
         In controller:    public ActionResult GetSomeData(int value1)
                           {
                               string testval = value == 1 ? "SONY!" : "Other company~";
                               return Content(testval);     
                           }
         In View:    <div>
                       <select id="selectlist">
                           <option value="1">SONY</option>
                           <option value="2">KDDI</option>
                           <option value="3">Apple</option>
                           <option value="4">Sum</option>
                       </select><br />
                       <div id="result">~</div>
                   </div>
                   <script>
                       $(document).ready(function () {
                           $("#selectlist").change(function () {
                               var value1 = this.value;
                               $.ajax({
                                   type: "Post",
                                   url: "/controllername/actionname",
                                   data: "value1=" + value1,
                                   success: function (sesponseTest) {
                                       $("#result").html(sesponseTest);
                                   }
                               });
                           });
                       });
                   </script>
                   
Want to do:
   1. I want to write a demo by using ajax which hava a little complicate.
      Like get a list from controller, and use this list generate a 'DropDownList',
      By the choosen value, change a 'div', maybe can list some 'Linq' data.








